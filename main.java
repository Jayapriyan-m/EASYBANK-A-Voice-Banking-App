package org.appinventor;
import com.google.appinventor.components.runtime.HandlesEventDispatching;
import com.google.appinventor.components.runtime.EventDispatcher;
import com.google.appinventor.components.runtime.Form;
import com.google.appinventor.components.runtime.Component;
import com.google.appinventor.components.runtime.VerticalArrangement;
import com.google.appinventor.components.runtime.Label;
import com.google.appinventor.components.runtime.TextBox;
import com.google.appinventor.components.runtime.PasswordTextBox;
import com.google.appinventor.components.runtime.Button;
import com.google.appinventor.components.runtime.Image;
import com.google.appinventor.components.runtime.HorizontalArrangement;
import com.google.appinventor.components.runtime.Web;
import com.google.appinventor.components.runtime.SpeechRecognizer;
import com.google.appinventor.components.runtime.TextToSpeech;
class Screen1 extends Form implements HandlesEventDispatching {
  private VerticalArrangement LoginPage;
  private Label wel;
  private Label ifnotcrct;
  private TextBox username;
  private PasswordTextBox PasswordTextBox1;
  private Button lrs;
  private VerticalArrangement Help_PAge;
  private Image Image1;
  private VerticalArrangement work_response;
  private Label Label2;
  private Label Label8;
  private Label actionlable;
  private TextBox res;
  private HorizontalArrangement mic_input;
  private Button StrtSpeech;
  private HorizontalArrangement helpbtnblock;
  private Button helpbtn;
  private Web Bank;
  private SpeechRecognizer SpeechRecognizer1;
  private SpeechRecognizer SpeechRecognizer2;
  private TextToSpeech TextToSpeech1;
  private SpeechRecognizer SpeechRecognizer3;
  private SpeechRecognizer SpeechRecognizer4;
  private SpeechRecognizer SpeechRecognizer5;
  private SpeechRecognizer SpeechRecognizer6;
  private SpeechRecognizer SpeechRecognizer7;
  private TextToSpeech TextToSpeech2;
  private SpeechRecognizer LSpeechRecognizer8;
  private SpeechRecognizer LSpeechRecognizer9;
  private TextToSpeech TextToSpeech4;
  private Web Lweb;
  private SpeechRecognizer SPeechRecUSername;
  private TextToSpeech TextToSpeech3;
  private TextToSpeech TextToSpeech5;
  private TextToSpeech TextToSpeech6;
  private TextToSpeech TextToSpeech7;
  private TextToSpeech TextToSpeech8;
  private TextToSpeech TextToSpeech9;
  private TextToSpeech TextToSpeech10;
  private TextToSpeech TextToSpeech11;
  private TextToSpeech TextToSpeech12;
  protected void $define() {
    this.AboutScreen("The banking app contains sensitive information such PIN numbers. The app should not read out certain sensitive information. Also during transaction, the application must ensure that the registered user is performing all of the below mentioned commands:Check balance, register/ remove user, send/ request money, display last 10 transaction history of current user, display and read-out profile information of the current user.");
    this.AppName("VoiceBank");
    this.Icon("MIC.jpg");
    this.Title("Vaulter Voice");
    LoginPage = new VerticalArrangement(this);
    LoginPage.AlignHorizontal(2);
    LoginPage.AlignVertical(2);
    LoginPage.BackgroundColor(0x00FFFFFF);
    LoginPage.Height(LENGTH_FILL_PARENT);
    LoginPage.Width(LENGTH_FILL_PARENT);
    LoginPage.Image("Picsart_23-04-22_12-26-01-269.jpg");
    wel = new Label(LoginPage);
    wel.FontBold(true);
    wel.FontSize(30);
    wel.Text("Welcome");
    wel.TextColor(0xFF13FFF4);
    ifnotcrct = new Label(LoginPage);
    ifnotcrct.TextColor(0xFFFF0000);
    username = new TextBox(LoginPage);
    username.FontSize(18);
    username.Height(36);
    username.Width(162);
    username.Hint("Username");
    username.Text("Username");
    username.Visible(false);
    PasswordTextBox1 = new PasswordTextBox(LoginPage);
    PasswordTextBox1.FontSize(16);
    PasswordTextBox1.Width(157);
    PasswordTextBox1.Hint("6-digit Pin");
    PasswordTextBox1.Text("6-digit Pin");
    PasswordTextBox1.Visible(false);
    lrs = new Button(LoginPage);
    lrs.BackgroundColor(0xFF13FFF4);
    lrs.FontBold(true);
    lrs.FontSize(15);
    lrs.FontTypeface(2);
    lrs.Width(-1033);
    lrs.Shape(1);
    lrs.Text("Speak");
    lrs.TextColor(0xFF000000);
    Help_PAge = new VerticalArrangement(this);
    Help_PAge.Height(LENGTH_FILL_PARENT);
    Help_PAge.Width(LENGTH_FILL_PARENT);
    Help_PAge.Visible(false);
    Image1 = new Image(Help_PAge);
    Image1.Height(LENGTH_FILL_PARENT);
    Image1.Width(LENGTH_FILL_PARENT);
    Image1.Picture("Picsart_23-04-22_18-26-48-926(1).jpg");
    Image1.ScalePictureToFit(true);
    work_response = new VerticalArrangement(this);
    work_response.AlignHorizontal(3);
    work_response.AlignVertical(2);
    work_response.Width(LENGTH_FILL_PARENT);
    work_response.Visible(false);
    Label2 = new Label(work_response);
    Label2.FontBold(true);
    Label2.FontSize(25);
    Label2.Text("Voice Banking");
    Label2.TextColor(0xFF3836D0);
    Label8 = new Label(work_response);
    actionlable = new Label(work_response);
    actionlable.FontBold(true);
    actionlable.TextColor(0xFF3836D0);
    res = new TextBox(work_response);
    res.FontBold(true);
    res.FontSize(18);
    res.Height(-1030);
    res.Width(LENGTH_FILL_PARENT);
    res.Hint("Response");
    res.MultiLine(true);
    mic_input = new HorizontalArrangement(this);
    mic_input.AlignHorizontal(3);
    mic_input.AlignVertical(2);
    mic_input.BackgroundColor(0x00FFFFFF);
    mic_input.Height(-1050);
    mic_input.Width(LENGTH_FILL_PARENT);
    mic_input.Visible(false);
    StrtSpeech = new Button(mic_input);
    StrtSpeech.BackgroundColor(0xFF000000);
    StrtSpeech.FontBold(true);
    StrtSpeech.Height(-1018);
    StrtSpeech.Width(-1035);
    StrtSpeech.Image("Picsart_23-04-22_16-54-42-464.png");
    StrtSpeech.Shape(1);
    helpbtnblock = new HorizontalArrangement(this);
    helpbtnblock.AlignHorizontal(3);
    helpbtnblock.AlignVertical(2);
    helpbtnblock.Width(LENGTH_FILL_PARENT);
    helpbtnblock.Visible(false);
    helpbtn = new Button(helpbtnblock);
    helpbtn.BackgroundColor(0xFF3836D0);
    helpbtn.FontBold(true);
    helpbtn.Text("Get Help");
    helpbtn.TextColor(0xFFFFFFFF);
    Bank = new Web(this);
    Bank.AllowCookies(true);
    Bank.Url(http://events.respark.iitm.ac.in:5000/rp_bank_api);
    SpeechRecognizer1 = new SpeechRecognizer(this);
    SpeechRecognizer2 = new SpeechRecognizer(this);
    TextToSpeech1 = new TextToSpeech(this);
    TextToSpeech1.Country("IND");
    TextToSpeech1.Language("en");
    TextToSpeech1.SpeechRate(1);
    SpeechRecognizer3 = new SpeechRecognizer(this);
    SpeechRecognizer4 = new SpeechRecognizer(this);
    SpeechRecognizer5 = new SpeechRecognizer(this);
    SpeechRecognizer6 = new SpeechRecognizer(this);
    SpeechRecognizer7 = new SpeechRecognizer(this);
    TextToSpeech2 = new TextToSpeech(this);
    TextToSpeech2.Country("IND");
    TextToSpeech2.Language("en");
    TextToSpeech2.SpeechRate(1);
    LSpeechRecognizer8 = new SpeechRecognizer(this);
    LSpeechRecognizer9 = new SpeechRecognizer(this);
    TextToSpeech4 = new TextToSpeech(this);
    TextToSpeech4.SpeechRate(1);
    Lweb = new Web(this);
    Lweb.Url(http://events.respark.iitm.ac.in:5000/rp_bank_api);
    SPeechRecUSername = new SpeechRecognizer(this);
    TextToSpeech3 = new TextToSpeech(this);
    TextToSpeech3.Country("IND");
    TextToSpeech3.SpeechRate(1);
    TextToSpeech5 = new TextToSpeech(this);
    TextToSpeech5.Country("IND");
    TextToSpeech5.SpeechRate(1);
    TextToSpeech6 = new TextToSpeech(this);
    TextToSpeech6.Country("IND");
    TextToSpeech6.SpeechRate(1);
    TextToSpeech7 = new TextToSpeech(this);
    TextToSpeech7.Country("IND");
    TextToSpeech8 = new TextToSpeech(this);
    TextToSpeech8.Country("IND");
    TextToSpeech8.SpeechRate(1);
    TextToSpeech9 = new TextToSpeech(this);
    TextToSpeech9.Country("IND");
    TextToSpeech9.SpeechRate(1);
    TextToSpeech10 = new TextToSpeech(this);
    TextToSpeech10.Country("IND");
    TextToSpeech10.SpeechRate(1);
    TextToSpeech11 = new TextToSpeech(this);
    TextToSpeech11.Country("IND");
    TextToSpeech11.SpeechRate(1);
    TextToSpeech12 = new TextToSpeech(this);
    TextToSpeech12.Country("IND");
    TextToSpeech12.SpeechRate(1);
  }
  public boolean dispatchEvent(Component component, String componentName, String eventName, Object[] params){
    return false;
  }
}
